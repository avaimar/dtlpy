options:
  docker: true
pipelines:
  tags:
    "*":
      - step:
          image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
          name: Build SDK Container
          script:
            # Get an oauth access token using the client credentials, parsing out the token with jq.
            - apt-get update && apt-get install -y curl jq

            # Make changes and commit back.
            - case "$BITBUCKET_TAG" in "") export BITBUCKET_TAG="build-$BITBUCKET_BUILD_NUMBER"; esac
            - apt-get -y update && apt-get install -y python3-pip
            - python3 setup.py bdist_wheel
            - docker login -u _json_key -p "$GCP_KEY" https://gcr.io
            - cp dist/dtlpy-$BITBUCKET_TAG-py3-none-any.whl dist/dtlpy-latest-py3-none-any.whl
            - echo "$GCP_KEY" >> k.json
            - gcloud auth activate-service-account --key-file=k.json
            - gsutil -m cp -R dist/**  gs://dtlpy/dev/
            - export DOCKER_BUILDKIT=0
            - chmod +x ./build-docker.sh
            - echo $BITBUCKET_TAG
            - ./build-docker.sh $BITBUCKET_TAG
            - git checkout -b "$BITBUCKET_TAG"
            - >
              export access_token=$(curl -s -X POST -u "${CLIENT_ID}:${CLIENT_SECRET}" \
                https://bitbucket.org/site/oauth2/access_token \
                -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')
            - git clone https://x-token-auth:${access_token}@bitbucket.org/dataloop-ai/piper-agent-runner.git
            - cd piper-agent-runner
            - git config user.email sdk@dataloop.ai
            - git checkout master
            - python3 bumpversion.py --hard $BITBUCKET_TAG.0
            - git push --follow-tags
            - cd ..
      - step:
          name: Update dataloop-infra
          image: node:12.13.1
          script:
            - apt-get update && apt-get install -y curl jq
            - echo $BITBUCKET_TAG 
            - case $BITBUCKET_TAG in 
              *-rc*) 
                  INFRA_BRANCH="rc" &&     
                  SLACK_URL=$RC_SERVICES_BUILDS_SLACK_NOTIFICATION_URL ;;
              *-dev*)
                  INFRA_BRANCH="dev" &&
                  SLACK_URL=$DEV_SERVICES_BUILDS_SLACK_NOTIFICATION_URL	;;	
              *)
                  exit 0 ;;  
              esac
            - echo $INFRA_BRANCH && echo $SLACK_URL
            - case "$BITBUCKET_TAG" in "") export BITBUCKET_TAG="build-$BITBUCKET_BUILD_NUMBER"; esac
            - git config --global user.email "devops@dataloop.ai"
            - git config --global user.name "sdk-docs-pipeline"
            - git clone --branch $INFRA_BRANCH git@bitbucket.org:dataloop-ai/dataloop-infra.git && sed -i "s/^SDK_DOCS.*$/SDK_DOCS=$BITBUCKET_TAG/" dataloop-infra/.versions  && cat dataloop-infra/.versions
            - cd dataloop-infra && git commit -am "SDK_DOCS=$BITBUCKET_TAG"
            - >
              export access_token=$(curl -s -X POST -u "${AUTH0_CONSUMERS_DTLPY_PIPELINE_CLIENT_ID}:${AUTH0_CONSUMERS_DTLPY_PIPELINE_CLIENT_SECRET}" \
                https://bitbucket.org/site/oauth2/access_token \
                -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')

            - git tag -a $BITBUCKET_TAG -m "SDK_DOCS=$BITBUCKET_TAG" && git push https://x-token-auth:${access_token}@bitbucket.org/dataloop-ai/dataloop-infra.git --follow-tags
            - "curl -XPOST -H \"Content-type: application/json\" --data '{\"text\":\"['$INFRA_BRANCH'] Updated dataloop infra repository SDK_DOCS='$BITBUCKET_TAG' - dataloop infra pipeline is now running\"}' $SLACK_URL"
    "run-test-python-3.6.11":
      - step:
          image: python:3.6.11
          name: Tests-3.6.11
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
    "run-test-python-3.7.8":
      - step:
          image: python:3.7.8
          name: Tests3.7.8
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
    "run-test-python-3.8.4":
      - step:
          image: python:3.8.4
          name: Tests-3.8.4
          script:
            - python --version
            - PYTHONPATH=$PWD
            - apt update
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
    "run-test-python-3.9.0":
      - step:
          image: python:3.9.0
          name: Tests-3.9.0
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
    "run-test-python-3.10":
      - step:
          image: python:3.10
          name: Tests-3.10
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
    "run-test-python-3.11":
      - step:
          image: python:3.11
          name: Tests-3.11
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py

    "examples":
      - step:
          image: python:3.7.8
          name: Examples-3.7.8
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_examples.py
  custom:
    "xray-hook":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
          - name: TAGS
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - ./test.sh $TAGS

    "schedule-tests":
      - step:
          image: python:3.7.8
          name: Tests3.7.8
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py

    private-tenant:
      - variables:
          - name: DLP_ENV_NAME
          - name: AVOID_TESTRAIL
            default: false
      - step:
          image: python:3.8.4
          name: Tests-3.8.4
          script:
            - python --version
            - PYTHONPATH=$PWD
            - apt update
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
